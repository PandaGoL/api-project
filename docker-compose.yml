version: '3.9'
services:
  app:
    # container_name: api-project-app
    build:
      # context: .
      dockerfile: Dockerfile
    command: ./app
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      # - DB_USER=${DB_USER}
      # - DB_PASSWORD=${DB_PASSWORD}
      # - DB_NAME=${DB_NAME}
      # - DB_HOST=${DB_HOST}
    env_file:
      - .env
    tty: true
    ports:
      - 8000:8000
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - learning
  postgresdb:
    restart: always
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - learning

networks:
  learning:
    driver: bridge
volumes:
  pgdata: